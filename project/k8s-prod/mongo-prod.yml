apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      securityContext:
        fsGroup: 999  # MongoDB typically uses 999 as its group ID
        runAsUser: 999  # Run as the mongodb user, not root
      containers:
      - name: mongo
        image: "mongo:6.0.21"
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        env:
          - name: MONGO_INIT_DB_DATABASE
            value: "logs"
          - name: MONGO_INITDB_ROOT_USERNAME_FILE
            value: "/etc/mongo-secrets/mongo_user"
          - name: MONGO_INITDB_ROOT_PASSWORD_FILE
            value: "/etc/mongo-secrets/mongo_password"
        ports:
          - containerPort: 27017
        volumeMounts:
          - name: mongo-secrets
            mountPath: "/etc/mongo-secrets"
            readOnly: true
          - name: mongo-data
            mountPath: "/data/db"
      volumes:
      - name: mongo-secrets
        secret:
          secretName: mongo-secret
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      name: main-port
      port: 27017
      targetPort: 27017

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard  # Adjust based on the cloud provider

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mongo-pdb
spec:
  minAvailable: 2  # Ensure at least 2 pods are available during voluntary disruptions
  selector:
    matchLabels:
      app: mongo

---

# For production, consider a StatefulSet instead of a Deployment
# Uncomment and adapt the below for a proper MongoDB replica set
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mongo
#   labels:
#     app: mongo
# spec:
#   serviceName: "mongo"
#   replicas: 3
#   selector:
#     matchLabels:
#       app: mongo
#   template:
#     metadata:
#       labels:
#         app: mongo
#     spec:
#       # ... same container spec as above ...